
spring.application.name=orders-service
server.port=8081
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order_service 
#in mysql workbench we need to do (create database order_service; use order_service;)
spring.datasource.username=root
spring.datasource.password=OmSaiRam*369
spring.jpa.show-sql=true 
spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
#when a sql query is fired show in the console

eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#there are some issues with DNSResolve issue so add this property in all MS to services to register the host's IP address 
#rather than the container's hostname to the Eureka server.
eureka.instance.prefer-ip-address=true


#spring boot actuator
management.endpoints.web.exposure.include=*
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always 


#Resilience 4j 
#to register health indicator to see different states-open,halfopen,closed
resilience4j.circuitbreaker.instances.inventory.register-health-indicator=true

#how much buffer size it is taking as input
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10

#it won't changes the status from closed to open immediately when back to back request are failed then only it will open
resilience4j.circuitbreaker.instances.inventory.sliding-window-type=COUNT_BASED

#after 5 failure calls it will chnage the state to open from closed
resilience4j.circuitbreaker.instances.inventory.sliding-window-size=5

#after 50 percent calls are failed then status is changed
resilience4j.circuitbreaker.instances.inventory.failure-rate-threshold=50

#it has to stay for duration in open state and execute fallback/retry methods before trying again or moving to half open state
resilience4j.circuitbreaker.instances.inventory.wait-duration-in-open-state=5s

#in half open state it will call for 3 times after these 3 are success it moves to closed otherwise back to open state
resilience4j.circuitbreaker.instances.inventory.permitted-number-of-calls-in-half-open-state=3

#to move from open to half open state
resilience4j.circuitbreaker.instances.inventory.automatic-transition-from-open-to-half-open-enabled=true



#Resilience 4j timeout properties
resilience4j.timelimiter.instances.inventory.timeout-duration=3s


#resileinece 4j retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s










